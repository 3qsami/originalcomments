<html>
<head>
	<title>Form List</title>
	<link type="text/css" rel="Stylesheet" href="../../style/main.css" />
	<link type="text/css" rel="Stylesheet" href="../../style/ui-lightness/jquery-ui.css" />
	<script type="text/javascript" src="../../lib/jquery.min.js"></script>
	<script type="text/javascript">
		//jq
		var jQuery = createJQuery(window);
</script>
	<script type="text/javascript" src="../../lib/jquery-ui.min.js"></script>
	<script type="text/javascript" src="../../js/cbase.js"></script>
	<script type="text/javascript" src="../../js/ctools.js"></script>
	<script type="text/javascript" src="../../js/cpage.js"></script>
	<script type="text/javascript">

		// url
		var URL_Feed_WebCalls_createguid = "http://www.pimshell.com/formgallery/WebCalls.aspx?action=createguid";
		var URL_Feed_FormDownload = "http://www.pimshell.com/formgallery/Download.aspx";

		//
		(function () {
			//url
			var oParts = ctools.splitURL(document.URL);

			//cbase
			var sBaseSrc = String2.format("../../{0}/js/cbase.js", oParts["platform"]);
			ctools.loadScriptSrc(document, sBaseSrc, function () {
				//page context
				createPageContext(window, document, jQuery);

				//ok
				jQuery(document).ready(function () {

					//
					jQuery("#cmd_new").button();
					jQuery("#cmd_import").button();

					//fill
					_fillformlist();

					//check action
					_checkURLAction(oParts);

					//ok
					jQuery(document.body).css('visibility', 'visible');
				});
			});

		})();

		//check url action
		function _checkURLAction(oParts) {
			var action = oParts["action"];
			var sFormId = oParts["formId"];
			var sArticleLink = oParts["url"];

			if (action == "importform") {
				if (!String2.isEmpty(sFormId)) {
					//import
					__importForm(sFormId, function (result) {
						if (result) {
							//update debug_articlelink
							//2010.12.12 not change link if not empty
							var oFormContent = _getFormContent(sFormId);
							if (String2.isEmpty(oFormContent["debug_articlelink"])) {
								oFormContent["debug_articlelink"] = sArticleLink;
								_setFormContent(oFormContent);
							}

							//edit
							onclick_edit(null, sFormId);
						}
					});
				}
			}
		}

		function _getFieldValueForForm(oNodeFields, sFieldName) {
			var s = String2.format("field[@name=\"{0}\"]", sFieldName);
			return ctools.getNodeText(ctools.selectSingleNode(oNodeFields, s));
		}

		function _getOptionsForms() {
			var oForms = cbase.getoption("builder.forms", null);
			if (oForms == null) {
				oForms = new Object();
			}
			return oForms;
		}
		function _setOptionsForms(oForms) {
			cbase.setoption("builder.forms", oForms);
		}
		function _getFormContent(sFormId) {
			var oFormContent = cbase.getoption("builder.form.content:" + sFormId, null);
			if (oFormContent == null) {
				oFormContent = new Object();
			}
			return oFormContent;
		}
		function _setFormContent(oFormContent) {
			cbase.setoption("builder.form.content:" + oFormContent["formId"], oFormContent);
		}
		function _removeFormContent(sFormId) {
			cbase.removeoption("builder.form.content:" + sFormId);
		}

		function _importFromPXML(sResponseText) {
			var oForms = _getOptionsForms();
			var bChanged = false;

			//
			var oRoot = ctools.nodeFromXML(sResponseText);
			if (oRoot != null) {
				var oNodeItems = ctools.selectSingleNode(oRoot, "plugins/plugin[@guid=\"{00000000-0000-0000-0002-000000000008}\"]/entities/entity[@index=\"0\"]/items");
				if (oNodeItems != null) {
					//loop
					var oNodeItem = oNodeItems.firstChild;
					while (oNodeItem != null) {
						if (oNodeItem.nodeName == "item") {
							var oNodeFields = ctools.selectSingleNode(oNodeItem, "fields");
							if (oNodeFields != null) {
								//formId
								var sFormId = oNodeItem.getAttribute("itemId");
								var sFormVersion = _getFieldValueForForm(oNodeFields, "Version");

								//check form exsis and old
								var oFormInfo = oForms[sFormId];
								if (oFormInfo == null || oFormInfo["Version"].toString() < sFormVersion) {
									if (oFormInfo == null) {
										oFormInfo = new Object();
										oFormInfo["CreateTime"] = new Date();

										oForms[sFormId] = oFormInfo;
									}

									oFormInfo["formId"] = sFormId;

									oFormInfo["ItemTitle"] = _getFieldValueForForm(oNodeFields, "ItemTitle");
									oFormInfo["ModifiedTime"] = new Date();
									oFormInfo["Version"] = sFormVersion;
									oFormInfo["ReleaseTime"] = _getFieldValueForForm(oNodeFields, "ReleaseTime");
									oFormInfo["Publisher"] = _getFieldValueForForm(oNodeFields, "Publisher");
									oFormInfo["Email"] = _getFieldValueForForm(oNodeFields, "Email");
									oFormInfo["Homepage"] = _getFieldValueForForm(oNodeFields, "Homepage");
									oFormInfo["Description"] = _getFieldValueForForm(oNodeFields, "Description");
									oFormInfo["FormType"] = _getFieldValueForForm(oNodeFields, "FormType");
									oFormInfo["FormParam1"] = _getFieldValueForForm(oNodeFields, "FormParam1");
									oFormInfo["FormParam2"] = _getFieldValueForForm(oNodeFields, "FormParam2");

									var oFormContent = _getFormContent(sFormId);
									oFormContent["formId"] = sFormId;
									oFormContent["FormHTM"] = _getFieldValueForForm(oNodeFields, "FormHTM");
									oFormContent["FormXML"] = _getFieldValueForForm(oNodeFields, "FormXML");
									oFormContent["FormJS"] = _getFieldValueForForm(oNodeFields, "FormJS");
									_setFormContent(oFormContent);

									//
									bChanged = true;
								}
								else {
									//so as to lead to top
									oFormInfo["ModifiedTime"] = new Date();

									//
									bChanged = true;
								}
							}
						}

						//next
						oNodeItem = oNodeItem.nextSibling;
					}
				}
			}

			if (bChanged) {
				_setOptionsForms(oForms);
				_fillformlist(oForms);
			}
		}

		function _fillformlist(oForms) {
			if(oForms==null)
				oForms = _getOptionsForms();

			//order by ModifiedTime desc
			var oArray = new Array();
			for (var sFormId in oForms) {
				oArray.push(sFormId);
			}
			//desc
			oArray.sort(function (x, y) {
				var a = new Date(oForms[x]["ModifiedTime"]);
				var b = new Date(oForms[y]["ModifiedTime"]);
				return a == b ? 0 : (a > b ? -1 : 1);
			});

			//subscriptions
			var sHtml = "";

			//loop
			for (var i = 0; i < oArray.length; i++) {
				var sFormId = oArray[i];
				var oFollowInfo = oForms[sFormId];

				var s = String2.format("<h4 _formId='{0}' id='accordion-subscriptions-{0}'><div style='max-width:600px;display:block;overflow:hidden;white-space:nowrap;'>\
											<a href='#' onclick='return onclick_edit(event,\"{0}\");' title='{1}' style='margin-right:4px;'><img border='0' src='{2}' /></a>\
											<a href='#' onclick='return onclick_clone(event,\"{0}\");' title='{3}' style='margin-right:4px;'><img border='0' src='{4}' /></a>\
											<a href='#' onclick='return onclick_delete(event,\"{0}\");' title='{5}' style='margin-right:4px;'><img border='0' src='{6}' /></a>\
											<span>{7}</span>\
											</div></h4>",
											sFormId,
											'Edit',
											cbase.getURL("addons/images/edit.gif"),
											'Clone',
											cbase.getURL("addons/images/copy.ico"),
											'Delete',
											cbase.getURL("addons/images/itemdelete.ico"),
											oFollowInfo["ItemTitle"]
											);

				sHtml += s;
			}

			//force destroy old node
			jQuery("#formlist").remove();

			//formlist
			if (sHtml != "") {
				//create
				var oDivFormList = document.createElement("div");
				oDivFormList.id = "formlist";
				jQuery("#container_formlist").append(oDivFormList);

				//content
				jQuery(oDivFormList).html(sHtml);
			}

			//
			jQuery("#formlistStat").text(oArray.length);
		}
	</script>
	<script type="text/javascript">

	function onclick_edit(event, sFormId) {
		var sURL = String2.format("{0}?platform=chrome&FormId={1}",
										cbase.getURL("addons/content/builder/formedit.htm"), sFormId);
		cbase.newTab(sURL, true);
	}
	function onclick_clone(event, sFormIdSource) {
		//create guid
		_createguid(function (sFormId) {
			if (!String2.isEmpty(sFormId)) {
				var oForms = _getOptionsForms();
				var oFormInfoSource = oForms[sFormIdSource];
				var oFormContentSource = _getFormContent(sFormIdSource);

				//new
				oFormInfo = new Object();
				oFormInfo["CreateTime"] = new Date();

				oForms[sFormId] = oFormInfo;

				//info
				oFormInfo["formId"] = sFormId;

				oFormInfo["ItemTitle"] = "Clone " + oFormInfoSource["ItemTitle"];
				oFormInfo["ModifiedTime"] = new Date();
				oFormInfo["Version"] = "1.0.0.0";
				oFormInfo["ReleaseTime"] = new Date();
				oFormInfo["Publisher"] = oFormInfoSource["Publisher"];
				oFormInfo["Email"] = oFormInfoSource["Email"];
				oFormInfo["Homepage"] = oFormInfoSource["Homepage"];
				oFormInfo["Description"] = oFormInfoSource["Description"];
				oFormInfo["FormType"] = oFormInfoSource["FormType"];
				oFormInfo["FormParam1"] = "";
				oFormInfo["FormParam2"] = oFormInfoSource["FormParam2"];

				var oFormContent = _getFormContent(sFormId);
				oFormContent["formId"] = sFormId;
				oFormContent["FormHTM"] = oFormContentSource["FormHTM"];
				oFormContent["FormXML"] = oFormContentSource["FormXML"];
				oFormContent["FormJS"] = oFormContentSource["FormJS"];
				_setFormContent(oFormContent);

				//save
				_setOptionsForms(oForms);

				//refresh
				_fillformlist(oForms);

				//open
				onclick_edit(null, sFormId);
			}
		});
	}
	function onclick_delete(event, sFormId) {
		if (window.confirm("Are you sure you want to delete this form?")) {
			//forminfo
			var oForms = _getOptionsForms();
			delete oForms[sFormId];
			_setOptionsForms(oForms);

			//formcontent
			_removeFormContent(sFormId);

			//refresh
			_fillformlist(oForms);
		}
	}
	function onclick_new() {
		//create guid
		_createguid(function (sFormId) {
			if (!String2.isEmpty(sFormId)) {
				//
				var oForms = _getOptionsForms();

				//new
				oFormInfo = new Object();
				oFormInfo["CreateTime"] = new Date();

				oForms[sFormId] = oFormInfo;

				//info
				oFormInfo["formId"] = sFormId;

				oFormInfo["ItemTitle"] = "New Form";
				oFormInfo["ModifiedTime"] = new Date();
				oFormInfo["Version"] = "1.0.0.0";
				oFormInfo["ReleaseTime"] = new Date();
				oFormInfo["Publisher"] = "";
				oFormInfo["Email"] = "";
				oFormInfo["Homepage"] = "";
				oFormInfo["Description"] = "";
				oFormInfo["FormType"] = "{C127CD9B-8059-4B0C-BD7B-077EA300073C}";
				oFormInfo["FormParam1"] = "";
				oFormInfo["FormParam2"] = "";

				var oFormContent = _getFormContent(sFormId);
				oFormContent["formId"] = sFormId;
				oFormContent["FormHTM"] = "";
				oFormContent["FormXML"] = "\
<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n\
<page>\r\n\
	<formForComments>\r\n\
		<trackComments className=\"\" eventClassName=\"\" pageOrderDirection=\"\" reference=\"{B1C8E6FB-C609-49BA-94E5-22F6B84CF93A}\">\r\n\
		</trackComments>\r\n\
		<resource>\r\n\
			<sessions>\r\n\
				<session id=\"trackComments\">\r\n\
					<request method=\"get\">\r\n\
						<url id=\"url\"></url>\r\n\
					</request>\r\n\
					<response>\r\n\
						<matches>\r\n\
							<match id=\"comments\"></match>\r\n\
							<match id=\"totalcount\" onlyOnce=\"true\"></match>\r\n\
							<match id=\"pagecount\" onlyOnce=\"true\"></match>\r\n\
						</matches>\r\n\
					</response>\r\n\
				</session>\r\n\
			</sessions>\r\n\
			<matches>\r\n\
				<match id=\"articleId\">\r\n\
					<regexp>\r\n\
						<![CDATA[\r\n\
							\r\n\
						]]>\r\n\
					</regexp>\r\n\
					<succeeded>\r\n\
						<matches>\r\n\
							<match index=\"1\" name=\"articleId\" />\r\n\
						</matches>\r\n\
					</succeeded>\r\n\
					<failed>\r\n\
						<matches>\r\n\
							<match value=\"\" name=\"articleId\" />\r\n\
						</matches>\r\n\
					</failed>\r\n\
				</match>\r\n\
				<match id=\"comments\" name=\"comments\" loop=\"true\" itemOrderDirection=\"\">\r\n\
					<regexp>\r\n\
						<![CDATA[\r\n\
								\r\n\
						]]>\r\n\
					</regexp>\r\n\
					<succeeded>\r\n\
						<matches>\r\n\
							\r\n\
						</matches>\r\n\
					</succeeded>\r\n\
				</match>\r\n\
				<match id=\"totalcount\">\r\n\
					<regexp>\r\n\
						<![CDATA[\r\n\
							\r\n\
						]]>\r\n\
					</regexp>\r\n\
					<succeeded>\r\n\
						<matches>\r\n\
							<match index=\"1\" name=\"totalcount\" />\r\n\
						</matches>\r\n\
					</succeeded>\r\n\
					<failed>\r\n\
						<matches>\r\n\
							<match value=\"-1\" name=\"totalcount\" />\r\n\
						</matches>\r\n\
					</failed>\r\n\
				</match>\r\n\
				<match id=\"pagecount\" value=\"1\" name=\"pagecount\"></match>\r\n\
			</matches>\r\n\
			<combines>\r\n\
				<combine id=\"url\"><![CDATA[]]></combine>\r\n\
			</combines>\r\n\
		</resource>\r\n\
	</formForComments>\r\n\
</page>\r\n\
				";
				oFormContent["FormJS"] = "///////////////////////////////////////////////////////////////\r\n\
////	Track Comments Events -- begin\r\n\
\r\n\
\r\n\
////	Track Comments Events -- end\r\n	\
///////////////////////////////////////////////////////////////\r\n\
				";
				_setFormContent(oFormContent);

				//save
				_setOptionsForms(oForms);

				//refresh
				_fillformlist(oForms);

				//open
				onclick_edit(null, sFormId);
			}
		});
		
		return false;
	}
	function onclick_import() {
		var sFormId = window.prompt("Please specify the Form Id", "");
		if (sFormId == "")
			return false;

		__importForm(sFormId, function (result) {
			if (result) {
				window.alert("Import completed!");
			}
			else {
				window.alert("Import failed!");
			}
		});

		return false;
	}
	function __importForm(sFormId,callback) {
		var sURL;
		if (sFormId.indexOf(".pxml") > -1)
			sURL = sFormId;
		else
			sURL = String2.format("{0}?FormId={1}",URL_Feed_FormDownload, sFormId);

		var oParams = new Object();
		oParams["noCache"] = true;
		XMLHttpManager.openRequest2(sURL, oParams, function (oRequest) {
			//
			if (oRequest.status == 200) {
				_importFromPXML(oRequest.responseText);
				callback(true);
			}
			else {
				callback(false);
			}
		});
	}

	function _createguid(callback) {
		XMLHttpManager.openRequest2(URL_Feed_WebCalls_createguid, null, function (oRequest) {
			if (oRequest.status != 200) {
				callback(null);
			}
			else {
				callback(oRequest.responseText);
			}
		});
	}

</script>
</head>
<body style="visibility: hidden;">
	<div style="float: right; width: 400px;">
		<button id="cmd_new" onclick="return onclick_new();">New Form</button>
		<button id="cmd_import" onclick="return onclick_import();">Import</button>
	</div>
	<div style="clear: both; margin-left: 100px;" id="container_formlist">
		<div style="font-size:20px;">Form Count:<span id="formlistStat"></span></div>
	</div>
</body>
</html>
